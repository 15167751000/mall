<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.dnaizn.mall.mapper.PayLogMapper" >
  <resultMap id="BaseResultMap" type="cn.dnaizn.mall.pojo.PayLog" >
    <id column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="INTEGER" />
    <result column="total_fee" property="totalFee" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="transaction_id" property="transactionId" jdbcType="VARCHAR" />
    <result column="trade_state" property="tradeState" jdbcType="VARCHAR" />
    <result column="orders_id" property="ordersId" jdbcType="VARCHAR" />
    <result column="refund_id" property="refundId" jdbcType="VARCHAR" />
    <result column="refund_fee" property="refundFee" jdbcType="DECIMAL" />
    <result column="wx_refund_id" property="wxRefundId" jdbcType="VARCHAR" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    out_trade_no, create_time, pay_time, total_fee, user_id, transaction_id, trade_state, 
    orders_id, refund_id, refund_fee, wx_refund_id, pay_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.dnaizn.mall.pojo.PayLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pay_log
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from pay_log
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dnaizn.mall.pojo.PayLogExample" >
    delete from pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dnaizn.mall.pojo.PayLog" >
    insert into pay_log (out_trade_no, create_time, pay_time, 
      total_fee, user_id, transaction_id, 
      trade_state, orders_id, refund_id, 
      refund_fee, wx_refund_id, pay_type
      )
    values (#{outTradeNo,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{payTime,jdbcType=INTEGER}, 
      #{totalFee,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{transactionId,jdbcType=VARCHAR}, 
      #{tradeState,jdbcType=VARCHAR}, #{ordersId,jdbcType=VARCHAR}, #{refundId,jdbcType=VARCHAR}, 
      #{refundFee,jdbcType=DECIMAL}, #{wxRefundId,jdbcType=VARCHAR}, #{payType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.dnaizn.mall.pojo.PayLog" >
    insert into pay_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="transactionId != null" >
        transaction_id,
      </if>
      <if test="tradeState != null" >
        trade_state,
      </if>
      <if test="ordersId != null" >
        orders_id,
      </if>
      <if test="refundId != null" >
        refund_id,
      </if>
      <if test="refundFee != null" >
        refund_fee,
      </if>
      <if test="wxRefundId != null" >
        wx_refund_id,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="transactionId != null" >
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="tradeState != null" >
        #{tradeState,jdbcType=VARCHAR},
      </if>
      <if test="ordersId != null" >
        #{ordersId,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null" >
        #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="wxRefundId != null" >
        #{wxRefundId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dnaizn.mall.pojo.PayLogExample" resultType="java.lang.Integer" >
    select count(*) from pay_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pay_log
    <set >
      <if test="record.outTradeNo != null" >
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=INTEGER},
      </if>
      <if test="record.totalFee != null" >
        total_fee = #{record.totalFee,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.transactionId != null" >
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeState != null" >
        trade_state = #{record.tradeState,jdbcType=VARCHAR},
      </if>
      <if test="record.ordersId != null" >
        orders_id = #{record.ordersId,jdbcType=VARCHAR},
      </if>
      <if test="record.refundId != null" >
        refund_id = #{record.refundId,jdbcType=VARCHAR},
      </if>
      <if test="record.refundFee != null" >
        refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="record.wxRefundId != null" >
        wx_refund_id = #{record.wxRefundId,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pay_log
    set out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=INTEGER},
      total_fee = #{record.totalFee,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      trade_state = #{record.tradeState,jdbcType=VARCHAR},
      orders_id = #{record.ordersId,jdbcType=VARCHAR},
      refund_id = #{record.refundId,jdbcType=VARCHAR},
      refund_fee = #{record.refundFee,jdbcType=DECIMAL},
      wx_refund_id = #{record.wxRefundId,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dnaizn.mall.pojo.PayLog" >
    update pay_log
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="transactionId != null" >
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="tradeState != null" >
        trade_state = #{tradeState,jdbcType=VARCHAR},
      </if>
      <if test="ordersId != null" >
        orders_id = #{ordersId,jdbcType=VARCHAR},
      </if>
      <if test="refundId != null" >
        refund_id = #{refundId,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        refund_fee = #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="wxRefundId != null" >
        wx_refund_id = #{wxRefundId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
    </set>
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dnaizn.mall.pojo.PayLog" >
    update pay_log
    set create_time = #{createTime,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=INTEGER},
      total_fee = #{totalFee,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=INTEGER},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      trade_state = #{tradeState,jdbcType=VARCHAR},
      orders_id = #{ordersId,jdbcType=VARCHAR},
      refund_id = #{refundId,jdbcType=VARCHAR},
      refund_fee = #{refundFee,jdbcType=DECIMAL},
      wx_refund_id = #{wxRefundId,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=INTEGER}
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </update>
</mapper>