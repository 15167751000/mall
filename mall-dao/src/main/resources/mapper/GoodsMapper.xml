<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.dnaizn.mall.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="cn.dnaizn.mall.pojo.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="top_category" property="topCategory" jdbcType="INTEGER" />
    <result column="second_category" property="secondCategory" jdbcType="INTEGER" />
    <result column="seller_id" property="sellerId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="is_marketable" property="isMarketable" jdbcType="INTEGER" />
    <result column="c_time" property="cTime" jdbcType="BIGINT" />
    <result column="brand_id" property="brandId" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="small_pic" property="smallPic" jdbcType="VARCHAR" />
    <result column="images" property="images" jdbcType="VARCHAR" />
    <result column="is_enable_spec" property="isEnableSpec" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
    <result column="min_purchase" property="minPurchase" jdbcType="INTEGER" />
    <result column="labels" property="labels" jdbcType="OTHER" />
    <result column="properties" property="properties" jdbcType="OTHER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, top_category, second_category, seller_id, title, is_marketable, c_time, brand_id, 
    description, small_pic, images, is_enable_spec, is_delete, sort_order, min_purchase, 
    labels, properties
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.dnaizn.mall.pojo.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.dnaizn.mall.pojo.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.dnaizn.mall.pojo.Goods" >
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into goods (id, top_category, second_category, 
      seller_id, title, is_marketable, 
      c_time, brand_id, description, 
      small_pic, images, is_enable_spec, 
      is_delete, sort_order, min_purchase, 
      labels, properties)
    values (#{id,jdbcType=INTEGER}, #{topCategory,jdbcType=INTEGER}, #{secondCategory,jdbcType=INTEGER}, 
      #{sellerId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{isMarketable,jdbcType=INTEGER}, 
      #{cTime,jdbcType=BIGINT}, #{brandId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{smallPic,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, #{isEnableSpec,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER}, #{sortOrder,jdbcType=INTEGER}, #{minPurchase,jdbcType=INTEGER}, 
      #{labels,jdbcType=OTHER}, #{properties,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="cn.dnaizn.mall.pojo.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="topCategory != null" >
        top_category,
      </if>
      <if test="secondCategory != null" >
        second_category,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="isMarketable != null" >
        is_marketable,
      </if>
      <if test="cTime != null" >
        c_time,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="smallPic != null" >
        small_pic,
      </if>
      <if test="images != null" >
        images,
      </if>
      <if test="isEnableSpec != null" >
        is_enable_spec,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="minPurchase != null" >
        min_purchase,
      </if>
      <if test="labels != null" >
        labels,
      </if>
      <if test="properties != null" >
        properties,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topCategory != null" >
        #{topCategory,jdbcType=INTEGER},
      </if>
      <if test="secondCategory != null" >
        #{secondCategory,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="isMarketable != null" >
        #{isMarketable,jdbcType=INTEGER},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=BIGINT},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="smallPic != null" >
        #{smallPic,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="isEnableSpec != null" >
        #{isEnableSpec,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="minPurchase != null" >
        #{minPurchase,jdbcType=INTEGER},
      </if>
      <if test="labels != null" >
        #{labels,jdbcType=OTHER},
      </if>
      <if test="properties != null" >
        #{properties,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.dnaizn.mall.pojo.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.topCategory != null" >
        top_category = #{record.topCategory,jdbcType=INTEGER},
      </if>
      <if test="record.secondCategory != null" >
        second_category = #{record.secondCategory,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.isMarketable != null" >
        is_marketable = #{record.isMarketable,jdbcType=INTEGER},
      </if>
      <if test="record.cTime != null" >
        c_time = #{record.cTime,jdbcType=BIGINT},
      </if>
      <if test="record.brandId != null" >
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.smallPic != null" >
        small_pic = #{record.smallPic,jdbcType=VARCHAR},
      </if>
      <if test="record.images != null" >
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnableSpec != null" >
        is_enable_spec = #{record.isEnableSpec,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.sortOrder != null" >
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.minPurchase != null" >
        min_purchase = #{record.minPurchase,jdbcType=INTEGER},
      </if>
      <if test="record.labels != null" >
        labels = #{record.labels,jdbcType=OTHER},
      </if>
      <if test="record.properties != null" >
        properties = #{record.properties,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      top_category = #{record.topCategory,jdbcType=INTEGER},
      second_category = #{record.secondCategory,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      is_marketable = #{record.isMarketable,jdbcType=INTEGER},
      c_time = #{record.cTime,jdbcType=BIGINT},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      small_pic = #{record.smallPic,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      is_enable_spec = #{record.isEnableSpec,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      min_purchase = #{record.minPurchase,jdbcType=INTEGER},
      labels = #{record.labels,jdbcType=OTHER},
      properties = #{record.properties,jdbcType=OTHER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.dnaizn.mall.pojo.Goods" >
    update goods
    <set >
      <if test="topCategory != null" >
        top_category = #{topCategory,jdbcType=INTEGER},
      </if>
      <if test="secondCategory != null" >
        second_category = #{secondCategory,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="isMarketable != null" >
        is_marketable = #{isMarketable,jdbcType=INTEGER},
      </if>
      <if test="cTime != null" >
        c_time = #{cTime,jdbcType=BIGINT},
      </if>
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="smallPic != null" >
        small_pic = #{smallPic,jdbcType=VARCHAR},
      </if>
      <if test="images != null" >
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="isEnableSpec != null" >
        is_enable_spec = #{isEnableSpec,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="minPurchase != null" >
        min_purchase = #{minPurchase,jdbcType=INTEGER},
      </if>
      <if test="labels != null" >
        labels = #{labels,jdbcType=OTHER},
      </if>
      <if test="properties != null" >
        properties = #{properties,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.dnaizn.mall.pojo.Goods" >
    update goods
    set top_category = #{topCategory,jdbcType=INTEGER},
      second_category = #{secondCategory,jdbcType=INTEGER},
      seller_id = #{sellerId,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      is_marketable = #{isMarketable,jdbcType=INTEGER},
      c_time = #{cTime,jdbcType=BIGINT},
      brand_id = #{brandId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      small_pic = #{smallPic,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      is_enable_spec = #{isEnableSpec,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      min_purchase = #{minPurchase,jdbcType=INTEGER},
      labels = #{labels,jdbcType=OTHER},
      properties = #{properties,jdbcType=OTHER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>